{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "430a400b",
   "metadata": {},
   "source": [
    "Let's review MINIAOD(SIM) usage on US disk sites (T1 and T2).\n",
    "\n",
    "We need a breakdown of\n",
    "\n",
    "Campaign name | size on US disks | last accessed\n",
    "\n",
    "After that, we can choose where to put the cut and lift the rules for unused or super old campaigns.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "47a93044",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-29T10:52:14.626480Z",
     "start_time": "2022-11-29T10:52:13.533219Z"
    }
   },
   "outputs": [],
   "source": [
    "#import\n",
    "\n",
    "from datetime import datetime, timedelta\n",
    "import pandas as pd\n",
    "import pyspark.sql.functions as F\n",
    "import pyspark.sql.types as T"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "9561170c",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-29T10:52:14.631112Z",
     "start_time": "2022-11-29T10:52:14.628289Z"
    }
   },
   "outputs": [],
   "source": [
    "TODAY = datetime.today()\n",
    "# TODAY = TODAY - timedelta(days=1)# uncomment to use YESTERDAY as today\n",
    "TODAY = TODAY.strftime('%Y-%m-%d')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "81dbd2e0",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-29T10:52:14.657504Z",
     "start_time": "2022-11-29T10:52:14.634826Z"
    }
   },
   "outputs": [],
   "source": [
    "#pandas display settings\n",
    "\n",
    "pd.options.display.float_format = '{:,.2f}'.format\n",
    "pd.set_option('display.max_colwidth', None)\n",
    "pd.set_option('display.max_rows', None)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "ca728d0e",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-29T10:52:14.668370Z",
     "start_time": "2022-11-29T10:52:14.659335Z"
    }
   },
   "outputs": [],
   "source": [
    "#HDFS import paths\n",
    "\n",
    "HDFS_RUCIO_CONTENTS = \"/project/awg/cms/rucio/{}/contents/part*.avro\".format(TODAY)\n",
    "HDFS_RUCIO_REPLICAS = \"/project/awg/cms/rucio/{}/replicas/part*.avro\".format(TODAY)\n",
    "HDFS_RUCIO_DIDS     = \"/project/awg/cms/rucio/{}/dids/part*.avro\".format(TODAY)\n",
    "HDFS_RUCIO_LOCKS    = \"/project/awg/cms/rucio/{}/locks/part*.avro\".format(TODAY)\n",
    "HDFS_RUCIO_RSES     = \"/project/awg/cms/rucio/{}/rses/part*.avro\".format(TODAY)\n",
    "HDFS_RUCIO_RULES     = \"/project/awg/cms/rucio/{}/rules/part*.avro\".format(TODAY)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "1c326978",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-29T10:52:18.882279Z",
     "start_time": "2022-11-29T10:52:14.732477Z"
    }
   },
   "outputs": [],
   "source": [
    "# Get the list of desired Rses - T1 and T2 Rses at US sites\n",
    "\n",
    "df_rses = spark.read.format('avro').load(HDFS_RUCIO_RSES)\\\n",
    "    .withColumn('rse_id', F.lower(F.hex(F.col('ID'))))\\\n",
    "    .withColumnRenamed('RSE', 'rse_name')\\\n",
    "    .withColumnRenamed('RSE_TYPE', 'rse_type')\\\n",
    "    .select(['rse_name', 'rse_id', 'rse_type'])\n",
    "\n",
    "df_disk_rses = df_rses.filter(\n",
    "                            ( ~ F.col('rse_name').contains(\"_Tape\") ) & \\\n",
    "                            ( ~ F.col('rse_name').contains(\"T3_\") ) & \\\n",
    "                            ( ~ F.col('rse_name').contains(\"_Test\") ) & \\\n",
    "                            ( ~ F.col('rse_name').contains(\"_Temp\") ) & \\\n",
    "                            ( ~ F.col('rse_name').contains(\"_Ceph\") )\n",
    "                           )\n",
    "\n",
    "\n",
    "df_us_disk_rses = df_disk_rses.filter(F.col('rse_name').contains(\"US\"))\n",
    "df_non_us_disk_rses = df_disk_rses.filter(~F.col('rse_name').contains(\"US\"))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "3911d8ea",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-29T10:52:18.886877Z",
     "start_time": "2022-11-29T10:52:18.884297Z"
    }
   },
   "outputs": [],
   "source": [
    "# df_rses.toPandas()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "c9a615fe",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-29T10:52:29.064328Z",
     "start_time": "2022-11-29T10:52:18.888862Z"
    }
   },
   "outputs": [],
   "source": [
    "# MINIAOD(SIM) files with locks\n",
    "\n",
    "df_locks = spark.read.format('avro').load(HDFS_RUCIO_LOCKS) \\\n",
    "    .filter(F.col(\"STATE\") == 'O') \\\n",
    "    .withColumnRenamed(\"NAME\", \"file_name\") \\\n",
    "    .withColumn('file_size', F.col('BYTES').cast(T.LongType())) \\\n",
    "    .withColumn('rule', F.lower(F.hex(F.col('RULE_ID')))) \\\n",
    "    .withColumn('rse_id', F.lower(F.hex(F.col('RSE_ID')))) \\\n",
    "    .withColumn(\"created_date\", F.from_unixtime(F.col('created_at')/1000).cast(T.DateType())) \\\n",
    "    .withColumn(\"rule_age_days\", F.datediff(F.current_date(), F.col('created_date'))) \\\n",
    "    .select([\"file_name\", \"file_size\", \"rule\", \"rse_id\", \"created_date\", \"rule_age_days\"])\n",
    "\n",
    "\n",
    "df_locks_miniaods = df_locks.filter(F.col('file_name').contains('MINIAOD'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "aeb9509d",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-29T10:52:29.079759Z",
     "start_time": "2022-11-29T10:52:29.076664Z"
    }
   },
   "outputs": [],
   "source": [
    "# df_locks.limit(5).toPandas()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "9f3666dd",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-29T10:52:29.269306Z",
     "start_time": "2022-11-29T10:52:29.083422Z"
    }
   },
   "outputs": [],
   "source": [
    "df_locks_miniaod_us = df_us_disk_rses.alias(\"us_rses\")\\\n",
    "                            .join(df_locks_miniaods.alias(\"locks\"), F.col(\"us_rses.rse_id\")==F.col(\"locks.rse_id\"))\\\n",
    "                            .select([\"us_rses.rse_name\", \"us_rses.rse_id\", \"locks.file_name\", \"locks.file_size\", \"locks.rule\"])\n",
    "\n",
    "df_locks_miniaod_non_us = df_non_us_disk_rses.alias(\"non_us_rses\")\\\n",
    "                            .join(df_locks_miniaods.alias(\"locks\"), F.col(\"non_us_rses.rse_id\")==F.col(\"locks.rse_id\"))\\\n",
    "                            .select([\"non_us_rses.rse_name\", \"non_us_rses.rse_id\", \"locks.file_name\", \"locks.file_size\", \"locks.rule\"])\n",
    "\n",
    "df_locks_miniaod_all = df_rses.alias(\"all_rses\")\\\n",
    "                            .join(df_locks_miniaods.alias(\"locks\"), F.col(\"all_rses.rse_id\")==F.col(\"locks.rse_id\"))\\\n",
    "                            .select([\"all_rses.rse_name\", \"all_rses.rse_id\", \"locks.file_name\", \"locks.file_size\", \"locks.rule\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "f9bc1e30",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-29T10:52:39.845633Z",
     "start_time": "2022-11-29T10:52:29.270807Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>rse_name</th>\n",
       "      <th>rse_id</th>\n",
       "      <th>file_name</th>\n",
       "      <th>file_size</th>\n",
       "      <th>rule</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>T1_DE_KIT_Disk</td>\n",
       "      <td>16eef8c8359d47c985c5cc48dd1a1a56</td>\n",
       "      <td>/store/mc/RunIISummer20UL18MiniAODv2/WJetsToLNu_012JetsNLO_34JetsLO_EWNLOcorr_13TeV-sherpa/MINIAODSIM/106X_upgrade2018_realistic_v16_L1v1-v4/100001/4F0CE6C6-F194-D94C-BEBC-37BFEF8FA1AE.root</td>\n",
       "      <td>2365585847</td>\n",
       "      <td>2ed0b0b4a58349debfbc2e9095b90284</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>T1_DE_KIT_Disk</td>\n",
       "      <td>16eef8c8359d47c985c5cc48dd1a1a56</td>\n",
       "      <td>/store/mc/RunIISummer20UL18MiniAODv2/WJetsToLNu_012JetsNLO_34JetsLO_EWNLOcorr_13TeV-sherpa/MINIAODSIM/106X_upgrade2018_realistic_v16_L1v1-v4/100001/640C6A36-A8DB-3D41-B778-19AB2F97F51E.root</td>\n",
       "      <td>3876512314</td>\n",
       "      <td>2ed0b0b4a58349debfbc2e9095b90284</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>T1_DE_KIT_Disk</td>\n",
       "      <td>16eef8c8359d47c985c5cc48dd1a1a56</td>\n",
       "      <td>/store/mc/RunIISummer20UL18MiniAODv2/WJetsToLNu_012JetsNLO_34JetsLO_EWNLOcorr_13TeV-sherpa/MINIAODSIM/106X_upgrade2018_realistic_v16_L1v1-v4/100001/8591916F-862B-1B4C-8C94-0FD3925BFBAD.root</td>\n",
       "      <td>4201740681</td>\n",
       "      <td>2ed0b0b4a58349debfbc2e9095b90284</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>T1_DE_KIT_Disk</td>\n",
       "      <td>16eef8c8359d47c985c5cc48dd1a1a56</td>\n",
       "      <td>/store/mc/RunIISummer20UL18MiniAODv2/WJetsToLNu_012JetsNLO_34JetsLO_EWNLOcorr_13TeV-sherpa/MINIAODSIM/106X_upgrade2018_realistic_v16_L1v1-v4/100001/8FFF1925-3B31-F04D-BAD7-E03CDD024BAE.root</td>\n",
       "      <td>2262392629</td>\n",
       "      <td>2ed0b0b4a58349debfbc2e9095b90284</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>T1_DE_KIT_Disk</td>\n",
       "      <td>16eef8c8359d47c985c5cc48dd1a1a56</td>\n",
       "      <td>/store/mc/RunIISummer20UL18MiniAODv2/WJetsToLNu_012JetsNLO_34JetsLO_EWNLOcorr_13TeV-sherpa/MINIAODSIM/106X_upgrade2018_realistic_v16_L1v1-v4/100001/B534AE9F-D64D-3542-90F5-1C0D758C5006.root</td>\n",
       "      <td>2155239717</td>\n",
       "      <td>2ed0b0b4a58349debfbc2e9095b90284</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         rse_name                            rse_id  \\\n",
       "0  T1_DE_KIT_Disk  16eef8c8359d47c985c5cc48dd1a1a56   \n",
       "1  T1_DE_KIT_Disk  16eef8c8359d47c985c5cc48dd1a1a56   \n",
       "2  T1_DE_KIT_Disk  16eef8c8359d47c985c5cc48dd1a1a56   \n",
       "3  T1_DE_KIT_Disk  16eef8c8359d47c985c5cc48dd1a1a56   \n",
       "4  T1_DE_KIT_Disk  16eef8c8359d47c985c5cc48dd1a1a56   \n",
       "\n",
       "                                                                                                                                                                                       file_name  \\\n",
       "0  /store/mc/RunIISummer20UL18MiniAODv2/WJetsToLNu_012JetsNLO_34JetsLO_EWNLOcorr_13TeV-sherpa/MINIAODSIM/106X_upgrade2018_realistic_v16_L1v1-v4/100001/4F0CE6C6-F194-D94C-BEBC-37BFEF8FA1AE.root   \n",
       "1  /store/mc/RunIISummer20UL18MiniAODv2/WJetsToLNu_012JetsNLO_34JetsLO_EWNLOcorr_13TeV-sherpa/MINIAODSIM/106X_upgrade2018_realistic_v16_L1v1-v4/100001/640C6A36-A8DB-3D41-B778-19AB2F97F51E.root   \n",
       "2  /store/mc/RunIISummer20UL18MiniAODv2/WJetsToLNu_012JetsNLO_34JetsLO_EWNLOcorr_13TeV-sherpa/MINIAODSIM/106X_upgrade2018_realistic_v16_L1v1-v4/100001/8591916F-862B-1B4C-8C94-0FD3925BFBAD.root   \n",
       "3  /store/mc/RunIISummer20UL18MiniAODv2/WJetsToLNu_012JetsNLO_34JetsLO_EWNLOcorr_13TeV-sherpa/MINIAODSIM/106X_upgrade2018_realistic_v16_L1v1-v4/100001/8FFF1925-3B31-F04D-BAD7-E03CDD024BAE.root   \n",
       "4  /store/mc/RunIISummer20UL18MiniAODv2/WJetsToLNu_012JetsNLO_34JetsLO_EWNLOcorr_13TeV-sherpa/MINIAODSIM/106X_upgrade2018_realistic_v16_L1v1-v4/100001/B534AE9F-D64D-3542-90F5-1C0D758C5006.root   \n",
       "\n",
       "    file_size                              rule  \n",
       "0  2365585847  2ed0b0b4a58349debfbc2e9095b90284  \n",
       "1  3876512314  2ed0b0b4a58349debfbc2e9095b90284  \n",
       "2  4201740681  2ed0b0b4a58349debfbc2e9095b90284  \n",
       "3  2262392629  2ed0b0b4a58349debfbc2e9095b90284  \n",
       "4  2155239717  2ed0b0b4a58349debfbc2e9095b90284  "
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_locks_miniaod_non_us.limit(5).toPandas()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "3af9c7a4",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-29T10:52:43.947002Z",
     "start_time": "2022-11-29T10:52:39.847275Z"
    }
   },
   "outputs": [],
   "source": [
    "#Get file and block name maps\n",
    "\n",
    "df_file_block_map = spark.read.format('avro').load(HDFS_RUCIO_CONTENTS)\\\n",
    "                    .filter(F.col('CHILD_TYPE')=='F')\\\n",
    "                    .withColumnRenamed('NAME', 'block_name')\\\n",
    "                    .withColumnRenamed('CHILD_NAME', 'file_name')\\\n",
    "                    .select(['block_name', \"file_name\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "a25d7d12",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-29T10:52:44.043756Z",
     "start_time": "2022-11-29T10:52:43.949630Z"
    }
   },
   "outputs": [],
   "source": [
    "df_blocks_miniaod_us = df_locks_miniaod_us.alias(\"mini_files\")\\\n",
    "                                    .join(df_file_block_map.alias(\"file_block_map\"),\n",
    "                                         F.col(\"mini_files.file_name\")==F.col(\"file_block_map.file_name\")\n",
    "                                         )\\\n",
    "                                    .withColumnRenamed('rse_name', 'us_disk_rse')\\\n",
    "                                    .select([\"us_disk_rse\", \"mini_files.rse_id\", \"mini_files.file_name\", \"mini_files.file_size\", \"mini_files.rule\", \"file_block_map.block_name\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "81d71945",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-29T10:52:44.654134Z",
     "start_time": "2022-11-29T10:52:44.051812Z"
    }
   },
   "outputs": [],
   "source": [
    "df_block_dataset_map = spark.read.format('avro').load(HDFS_RUCIO_CONTENTS)\\\n",
    "                    .filter(F.col('CHILD_TYPE')=='D')\\\n",
    "                    .withColumnRenamed('NAME', 'dataset_name')\\\n",
    "                    .withColumnRenamed('CHILD_NAME', 'block_name')\\\n",
    "                    .select(['dataset_name', \"block_name\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "77bfa233",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-29T10:52:44.877868Z",
     "start_time": "2022-11-29T10:52:44.657495Z"
    }
   },
   "outputs": [],
   "source": [
    "\n",
    "#group by campaign, tier etc\n",
    "\n",
    "df_miniaod_us_campaign = df_blocks_miniaod_us.na.fill(0)\\\n",
    "                                    .withColumn('dataset_name', F.split(F.col('block_name'), '#').getItem(0))\\\n",
    "                                    .withColumn('tier', F.split(F.col('dataset_name'), '/').getItem(3))\\\n",
    "                                    .withColumn('brute_campaign', F.split(F.col('dataset_name'), '/').getItem(2))\\\n",
    "                                    .withColumn('short_campaign', F.split(F.col('brute_campaign'), '-').getItem(0))\\\n",
    "                                    .withColumn('campaign',\n",
    "                                               F.when(F.col(\"tier\")==\"MINIAOD\", F.col(\"brute_campaign\"))\\\n",
    "                                                .otherwise(F.col(\"short_campaign\"))\n",
    "                                               )\\\n",
    "                                    .dropDuplicates([\"file_name\"])\\\n",
    "                                    .select([\"campaign\", \"file_name\", \"dataset_name\", \"file_size\"])\n",
    "#                                     .withColumn(\"accessed_at_date\", F.from_unixtime(F.col('accessed_at')/1000).cast(T.DateType()))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "fdfd66f3",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-29T10:52:45.039837Z",
     "start_time": "2022-11-29T10:52:44.880474Z"
    }
   },
   "outputs": [],
   "source": [
    "X = 30\n",
    "top_X_campaigns = df_miniaod_us_campaign\\\n",
    "             .groupby(['campaign'])\\\n",
    "             .agg(F.sum(\"file_size\").alias(\"campaign_size\"))\\\n",
    "             .sort(F.col(\"campaign_size\").desc())\\\n",
    "             .limit(X)\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "914b1947",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-29T10:54:16.587874Z",
     "start_time": "2022-11-29T10:52:45.042528Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "+------------------------------+----------------+\n",
      "|campaign                      |campaign_size   |\n",
      "+------------------------------+----------------+\n",
      "|RunIISummer20UL18MiniAODv2    |1937170084422432|\n",
      "|RunIIAutumn18MiniAOD          |1765960684436765|\n",
      "|RunIIFall17MiniAODv2          |1755538551483870|\n",
      "|RunIISummer20UL17MiniAODv2    |1542735044166950|\n",
      "|RunIISummer20UL18MiniAOD      |1101781194019679|\n",
      "|RunIISummer16MiniAODv3        |1011546570832613|\n",
      "|RunIISummer20UL17MiniAOD      |883905093052120 |\n",
      "|RunIISummer20UL16MiniAODv2    |808245740111161 |\n",
      "|RunIISummer20UL16MiniAODAPVv2 |735768168076954 |\n",
      "|RunIISummer16MiniAODv2        |662852568331200 |\n",
      "|Run2018D-05May2019promptD-v1  |642458545376894 |\n",
      "|Run2018D-UL2018_MiniAODv2-v1  |597111130349395 |\n",
      "|RunIISummer20UL16MiniAOD      |509919334113197 |\n",
      "|RunIISummer20UL16MiniAODAPV   |444805461807943 |\n",
      "|Run2022F-PromptReco-v1        |330138059157485 |\n",
      "|HIRun2018A-PbPb18_MiniAODv1-v1|223296483229525 |\n",
      "|Run3Summer21MiniAOD           |209381472128320 |\n",
      "|Run3Winter22MiniAOD           |146957265374897 |\n",
      "|Run2022C-PromptReco-v1        |141415079691940 |\n",
      "|Run2018D-PromptReco-v2        |133736254090284 |\n",
      "|Run2018A-UL2018_MiniAODv2-v1  |127149466336034 |\n",
      "|Run2022E-PromptReco-v1        |117031566283437 |\n",
      "|Run2018B-05May2019-v2         |109478139836015 |\n",
      "|Run2018B-UL2018_MiniAODv2-v1  |107025240597159 |\n",
      "|Run2018D-15Feb2022_UL2018-v1  |103219436930491 |\n",
      "|Run2018C-UL2018_MiniAODv2-v1  |100140324701733 |\n",
      "|Run2018C-05May2019-v1         |100096342797526 |\n",
      "|Run2018A-05May2019-v1         |99627999921488  |\n",
      "|Run3Winter21DRMiniAOD         |73145663824010  |\n",
      "|HINPbPbSpring21MiniAOD        |71576492737382  |\n",
      "+------------------------------+----------------+\n",
      "\n"
     ]
    }
   ],
   "source": [
    "top_X_campaigns.show(X, False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "0f76273a",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-29T10:54:46.583396Z",
     "start_time": "2022-11-29T10:54:16.590345Z"
    }
   },
   "outputs": [],
   "source": [
    "#get list of campaigns to create datasets analysis for them\n",
    "#get size of each campaign\n",
    "\n",
    "temp_d = top_X_campaigns.toPandas().to_dict()\n",
    "campaign_size_dict = {}\n",
    "for i in range(X):\n",
    "    campaign_size_dict[temp_d['campaign'][i]] = temp_d['campaign_size'][i]\n",
    "    \n",
    "campaigns_list = list(campaign_size_dict.keys())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "41e117cb",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-29T10:56:09.125948Z",
     "start_time": "2022-11-29T10:56:08.928609Z"
    }
   },
   "outputs": [],
   "source": [
    "topX_campaign_files = top_X_campaigns.alias(\"topX\")\\\n",
    "                        .join(\n",
    "                            df_miniaod_us_campaign.alias(\"all\"),\n",
    "                            F.col(\"topX.campaign\")==F.col(\"all.campaign\")\n",
    "                        )\\\n",
    "                        .select([\"topX.campaign\", \"campaign_size\", \"file_name\", \"dataset_name\", \"file_size\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "ed9f91ad",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-29T10:56:09.742499Z",
     "start_time": "2022-11-29T10:56:09.666588Z"
    }
   },
   "outputs": [],
   "source": [
    "other_locked_replicas_for_topX = topX_campaign_files.alias(\"campaign_files\")\\\n",
    "                            .join(\n",
    "                                df_locks_miniaod_all.alias(\"replica\"),\n",
    "                                F.col(\"campaign_files.file_name\")==F.col(\"replica.file_name\")\n",
    "                            )\\\n",
    "                            .select([\"campaign\", \"campaign_size\", \"dataset_name\", \"replica.file_size\", \"rse_name\"])\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "4c0880bd",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-29T10:56:10.296252Z",
     "start_time": "2022-11-29T10:56:10.200756Z"
    }
   },
   "outputs": [],
   "source": [
    "non_us_disk_replicas_for_topX = topX_campaign_files.alias(\"campaign_files\")\\\n",
    "                            .join(\n",
    "                                df_locks_miniaod_non_us.alias(\"non_us_replica\"),\n",
    "                                F.col(\"campaign_files.file_name\")==F.col(\"non_us_replica.file_name\")\n",
    "                            )\\\n",
    "                            .select([\"campaign\", \"campaign_size\", \"dataset_name\", \"non_us_replica.file_size\", \"rse_name\", \"non_us_replica.file_name\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "458ba190",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-29T10:56:12.220419Z",
     "start_time": "2022-11-29T10:56:11.909283Z"
    }
   },
   "outputs": [],
   "source": [
    "#Assumption - if a file from a dataset is on tape then other files of the datasets are also on tape\n",
    "#Assumptioon: Datasets are fully replicated at US disk sites\n",
    "\n",
    "\n",
    "us_dataset_file_count = topX_campaign_files\\\n",
    "                            .dropDuplicates([\"file_name\"])\\\n",
    "                            .groupby(\"dataset_name\")\\\n",
    "                            .agg(\n",
    "                                    F.count(F.col(\"file_name\")).alias(\"file_count_us\"),\n",
    "                                    F.sum(\"file_size\").alias(\"dataset_size\")\n",
    "                                )\n",
    "\n",
    "non_us_dataset_file_count = non_us_disk_replicas_for_topX\\\n",
    "                            .dropDuplicates([\"file_name\"])\\\n",
    "                            .groupby(\"dataset_name\")\\\n",
    "                            .agg(F.count(F.col(\"file_name\")).alias(\"file_count_non_us\"))\n",
    "\n",
    "percent_locked_to_non_us_rses = us_dataset_file_count.alias(\"us_count\")\\\n",
    "                                                    .join(\n",
    "                                                            non_us_dataset_file_count.alias(\"non_us_count\"),\n",
    "                                                            F.col(\"us_count.dataset_name\") == F.col(\"non_us_count.dataset_name\"),\n",
    "                                                            \"left\"\n",
    "                                                        )\\\n",
    "                                                    .select([\"us_count.dataset_name\", \"file_count_us\", \"file_count_non_us\", \"us_count.dataset_size\"])\\\n",
    "                                                    .na.fill(0)\\\n",
    "                                                    .withColumn(\"percent_locked_other_sites\", 100*(F.col(\"file_count_non_us\")/F.col(\"file_count_us\")))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "48497694",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-29T08:31:01.709103Z",
     "start_time": "2022-11-29T08:31:01.662729Z"
    }
   },
   "outputs": [],
   "source": [
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "3f19f0b4",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-29T11:15:45.487591Z",
     "start_time": "2022-11-29T10:56:17.495753Z"
    }
   },
   "outputs": [],
   "source": [
    " #insert different dataset name here\n",
    "    \n",
    "meta_df = {\n",
    "    \"campaign\": [],\n",
    "    \"campaign_size\": [],\n",
    "    \"sum_dataset_sizes\": [],\n",
    "    \"dataset_on_tape_size\": [],\n",
    "    \"dataset_not_on_tape_size\" :[],\n",
    "    \"total_dataset_count\": [],\n",
    "    \"datasets_on_tape\": [],\n",
    "    \"datasets_not_on_tape\": [],\n",
    "    \"datasets_fully_replicated_at_other_disks\": []\n",
    "}\n",
    "\n",
    "for campaign in campaigns_list:\n",
    "    tape_replicas = other_locked_replicas_for_topX\\\n",
    "                    .filter(F.col(\"campaign\")==campaign)\\\n",
    "                    .groupby([\"dataset_name\"])\\\n",
    "                    .agg(\n",
    "                        F.sum(\"file_size\").alias(\"total_space_occupied\"),\n",
    "                        F.collect_set(F.col(\"rse_name\")).alias(\"rse_set\")\n",
    "                    )\\\n",
    "                    .withColumn(\"rses\", F.concat_ws(\",\", F.col(\"rse_set\")))\\\n",
    "                    .withColumn(\"on_tape\", F.col(\"rses\").contains(\"Tape\"))\\\n",
    "                    .select([\"dataset_name\", \"total_space_occupied\", \"rses\", \"on_tape\"])\n",
    "\n",
    "\n",
    "    tape_rep_dataset_size = tape_replicas.alias(\"tape_rep\")\\\n",
    "                        .join(\n",
    "                                percent_locked_to_non_us_rses.alias(\"dataset_size\"),\n",
    "                                F.col(\"tape_rep.dataset_name\") == F.col(\"dataset_size.dataset_name\")\n",
    "                             )\\\n",
    "                        .select([\"tape_rep.dataset_name\", \"total_space_occupied\", \"rses\", \"on_tape\", \"dataset_size\", \"percent_locked_other_sites\"])\n",
    "\n",
    "\n",
    "    pd_rep = tape_rep_dataset_size.toPandas()\n",
    "\n",
    "    meta_df['campaign'].append(campaign)\n",
    "    meta_df['campaign_size'].append(campaign_size_dict[campaign])\n",
    "    meta_df['total_dataset_count'].append(pd_rep.shape[0])\n",
    "    meta_df['datasets_on_tape'].append(pd_rep[pd_rep.on_tape == True].shape[0])\n",
    "    meta_df['datasets_not_on_tape'].append(pd_rep[pd_rep.on_tape != True].shape[0])\n",
    "    meta_df['sum_dataset_sizes'].append(pd_rep.dataset_size.sum())\n",
    "    meta_df['dataset_on_tape_size'].append(pd_rep[pd_rep.on_tape == True].dataset_size.sum())\n",
    "    meta_df['dataset_not_on_tape_size'].append(pd_rep[pd_rep.on_tape != True].dataset_size.sum())\n",
    "    meta_df['datasets_fully_replicated_at_other_disks'].append(pd_rep[pd_rep.percent_locked_other_sites == 100].shape[0])\n",
    "\n",
    "    pd_rep.to_csv(f\"Campaigns/{campaign}.csv\", index=False)\n",
    "\n",
    "pd_meta = pd.DataFrame.from_dict(meta_df)\n",
    "pd_meta.to_csv(\"campaign_meta.csv\")\n",
    "pd_meta.to_csv(\"Campaigns/campaign_meta.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "a9b24d2f",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-29T11:15:45.554807Z",
     "start_time": "2022-11-29T11:15:45.504298Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>campaign</th>\n",
       "      <th>campaign_size</th>\n",
       "      <th>sum_dataset_sizes</th>\n",
       "      <th>dataset_on_tape_size</th>\n",
       "      <th>dataset_not_on_tape_size</th>\n",
       "      <th>total_dataset_count</th>\n",
       "      <th>datasets_on_tape</th>\n",
       "      <th>datasets_not_on_tape</th>\n",
       "      <th>datasets_fully_replicated_at_other_disks</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>RunIISummer20UL18MiniAODv2</td>\n",
       "      <td>1937379375612216</td>\n",
       "      <td>1937560891983515</td>\n",
       "      <td>1912611004439451</td>\n",
       "      <td>24949887544064</td>\n",
       "      <td>17892</td>\n",
       "      <td>17427</td>\n",
       "      <td>465</td>\n",
       "      <td>8900</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>RunIIAutumn18MiniAOD</td>\n",
       "      <td>1765960684436765</td>\n",
       "      <td>1765960684436765</td>\n",
       "      <td>1700713367632361</td>\n",
       "      <td>65247316804404</td>\n",
       "      <td>15043</td>\n",
       "      <td>14836</td>\n",
       "      <td>207</td>\n",
       "      <td>551</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>RunIIFall17MiniAODv2</td>\n",
       "      <td>1755538551483870</td>\n",
       "      <td>1755538551483870</td>\n",
       "      <td>1736675543185649</td>\n",
       "      <td>18863008298221</td>\n",
       "      <td>17171</td>\n",
       "      <td>17021</td>\n",
       "      <td>150</td>\n",
       "      <td>465</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>RunIISummer20UL17MiniAODv2</td>\n",
       "      <td>1542735044166950</td>\n",
       "      <td>1542735044166950</td>\n",
       "      <td>1510446869781863</td>\n",
       "      <td>32288174385087</td>\n",
       "      <td>16635</td>\n",
       "      <td>16191</td>\n",
       "      <td>444</td>\n",
       "      <td>8362</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>RunIISummer20UL18MiniAOD</td>\n",
       "      <td>1101781194019679</td>\n",
       "      <td>1101781194019679</td>\n",
       "      <td>1097421874214595</td>\n",
       "      <td>4359319805084</td>\n",
       "      <td>3367</td>\n",
       "      <td>3345</td>\n",
       "      <td>22</td>\n",
       "      <td>13</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>RunIISummer16MiniAODv3</td>\n",
       "      <td>1011546570832613</td>\n",
       "      <td>1011546570832613</td>\n",
       "      <td>1009711519315023</td>\n",
       "      <td>1835051517590</td>\n",
       "      <td>25314</td>\n",
       "      <td>25185</td>\n",
       "      <td>129</td>\n",
       "      <td>526</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>RunIISummer20UL17MiniAOD</td>\n",
       "      <td>883905093052120</td>\n",
       "      <td>883905093052120</td>\n",
       "      <td>880306505603625</td>\n",
       "      <td>3598587448495</td>\n",
       "      <td>3315</td>\n",
       "      <td>3294</td>\n",
       "      <td>21</td>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>RunIISummer20UL16MiniAODv2</td>\n",
       "      <td>808245740111161</td>\n",
       "      <td>808245740111161</td>\n",
       "      <td>789070467751277</td>\n",
       "      <td>19175272359884</td>\n",
       "      <td>16603</td>\n",
       "      <td>16281</td>\n",
       "      <td>322</td>\n",
       "      <td>8298</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>RunIISummer20UL16MiniAODAPVv2</td>\n",
       "      <td>735768168076954</td>\n",
       "      <td>735768168076954</td>\n",
       "      <td>712835060564296</td>\n",
       "      <td>22933107512658</td>\n",
       "      <td>15174</td>\n",
       "      <td>14989</td>\n",
       "      <td>185</td>\n",
       "      <td>7917</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>RunIISummer16MiniAODv2</td>\n",
       "      <td>662852568331200</td>\n",
       "      <td>662852568331200</td>\n",
       "      <td>662536330750577</td>\n",
       "      <td>316237580623</td>\n",
       "      <td>18255</td>\n",
       "      <td>18115</td>\n",
       "      <td>140</td>\n",
       "      <td>724</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>Run2018D-05May2019promptD-v1</td>\n",
       "      <td>642458545376894</td>\n",
       "      <td>642458545376894</td>\n",
       "      <td>642458545376894</td>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>Run2018D-UL2018_MiniAODv2-v1</td>\n",
       "      <td>597111130349395</td>\n",
       "      <td>597111130349395</td>\n",
       "      <td>587840936279755</td>\n",
       "      <td>9270194069640</td>\n",
       "      <td>19</td>\n",
       "      <td>17</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>RunIISummer20UL16MiniAOD</td>\n",
       "      <td>509919334113197</td>\n",
       "      <td>509919334113197</td>\n",
       "      <td>508758899751258</td>\n",
       "      <td>1160434361939</td>\n",
       "      <td>3298</td>\n",
       "      <td>3272</td>\n",
       "      <td>26</td>\n",
       "      <td>19</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>RunIISummer20UL16MiniAODAPV</td>\n",
       "      <td>444805461807943</td>\n",
       "      <td>444805461807943</td>\n",
       "      <td>444245149367421</td>\n",
       "      <td>560312440522</td>\n",
       "      <td>3041</td>\n",
       "      <td>2994</td>\n",
       "      <td>47</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>Run2022F-PromptReco-v1</td>\n",
       "      <td>330138059157485</td>\n",
       "      <td>330138059157485</td>\n",
       "      <td>330138059157485</td>\n",
       "      <td>0</td>\n",
       "      <td>68</td>\n",
       "      <td>68</td>\n",
       "      <td>0</td>\n",
       "      <td>68</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>HIRun2018A-PbPb18_MiniAODv1-v1</td>\n",
       "      <td>223296483229525</td>\n",
       "      <td>223296483229525</td>\n",
       "      <td>223296483229525</td>\n",
       "      <td>0</td>\n",
       "      <td>28</td>\n",
       "      <td>28</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>Run3Summer21MiniAOD</td>\n",
       "      <td>209381472128320</td>\n",
       "      <td>209381472128320</td>\n",
       "      <td>206650772690049</td>\n",
       "      <td>2730699438271</td>\n",
       "      <td>225</td>\n",
       "      <td>218</td>\n",
       "      <td>7</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>Run3Winter22MiniAOD</td>\n",
       "      <td>146957265374897</td>\n",
       "      <td>146957265374897</td>\n",
       "      <td>138222700584553</td>\n",
       "      <td>8734564790344</td>\n",
       "      <td>231</td>\n",
       "      <td>220</td>\n",
       "      <td>11</td>\n",
       "      <td>18</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>Run2022C-PromptReco-v1</td>\n",
       "      <td>141415079691940</td>\n",
       "      <td>141415079691940</td>\n",
       "      <td>110686339486307</td>\n",
       "      <td>30728740205633</td>\n",
       "      <td>72</td>\n",
       "      <td>37</td>\n",
       "      <td>35</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>Run2018D-PromptReco-v2</td>\n",
       "      <td>133736254090284</td>\n",
       "      <td>133736254090284</td>\n",
       "      <td>133733606044635</td>\n",
       "      <td>2648045649</td>\n",
       "      <td>62</td>\n",
       "      <td>60</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>Run2018A-UL2018_MiniAODv2-v1</td>\n",
       "      <td>127149466336034</td>\n",
       "      <td>127149466336034</td>\n",
       "      <td>127149466336034</td>\n",
       "      <td>0</td>\n",
       "      <td>20</td>\n",
       "      <td>20</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>Run2022E-PromptReco-v1</td>\n",
       "      <td>117031566283437</td>\n",
       "      <td>117031566283437</td>\n",
       "      <td>117031566283437</td>\n",
       "      <td>0</td>\n",
       "      <td>98</td>\n",
       "      <td>98</td>\n",
       "      <td>0</td>\n",
       "      <td>98</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>Run2018B-05May2019-v2</td>\n",
       "      <td>109478139836015</td>\n",
       "      <td>109478139836015</td>\n",
       "      <td>109478139836015</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>Run2018B-UL2018_MiniAODv2-v1</td>\n",
       "      <td>107025240597159</td>\n",
       "      <td>107025240597159</td>\n",
       "      <td>107009210714592</td>\n",
       "      <td>16029882567</td>\n",
       "      <td>20</td>\n",
       "      <td>19</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>Run2018D-15Feb2022_UL2018-v1</td>\n",
       "      <td>103219436930491</td>\n",
       "      <td>103219436930491</td>\n",
       "      <td>59444997732964</td>\n",
       "      <td>43774439197527</td>\n",
       "      <td>12</td>\n",
       "      <td>10</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>Run2018C-UL2018_MiniAODv2-v1</td>\n",
       "      <td>100140324701733</td>\n",
       "      <td>100140324701733</td>\n",
       "      <td>100140324701733</td>\n",
       "      <td>0</td>\n",
       "      <td>18</td>\n",
       "      <td>18</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>Run2018C-05May2019-v1</td>\n",
       "      <td>100096342797526</td>\n",
       "      <td>100096342797526</td>\n",
       "      <td>100096342797526</td>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>Run2018A-05May2019-v1</td>\n",
       "      <td>99627999921488</td>\n",
       "      <td>99627999921488</td>\n",
       "      <td>99627999921488</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>Run3Winter21DRMiniAOD</td>\n",
       "      <td>73145663824010</td>\n",
       "      <td>73145663824010</td>\n",
       "      <td>64448763354242</td>\n",
       "      <td>8696900469768</td>\n",
       "      <td>298</td>\n",
       "      <td>272</td>\n",
       "      <td>26</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>HINPbPbSpring21MiniAOD</td>\n",
       "      <td>71576492737382</td>\n",
       "      <td>71576492737382</td>\n",
       "      <td>71576492737382</td>\n",
       "      <td>0</td>\n",
       "      <td>158</td>\n",
       "      <td>158</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                          campaign     campaign_size  sum_dataset_sizes  \\\n",
       "0       RunIISummer20UL18MiniAODv2  1937379375612216   1937560891983515   \n",
       "1             RunIIAutumn18MiniAOD  1765960684436765   1765960684436765   \n",
       "2             RunIIFall17MiniAODv2  1755538551483870   1755538551483870   \n",
       "3       RunIISummer20UL17MiniAODv2  1542735044166950   1542735044166950   \n",
       "4         RunIISummer20UL18MiniAOD  1101781194019679   1101781194019679   \n",
       "5           RunIISummer16MiniAODv3  1011546570832613   1011546570832613   \n",
       "6         RunIISummer20UL17MiniAOD   883905093052120    883905093052120   \n",
       "7       RunIISummer20UL16MiniAODv2   808245740111161    808245740111161   \n",
       "8    RunIISummer20UL16MiniAODAPVv2   735768168076954    735768168076954   \n",
       "9           RunIISummer16MiniAODv2   662852568331200    662852568331200   \n",
       "10    Run2018D-05May2019promptD-v1   642458545376894    642458545376894   \n",
       "11    Run2018D-UL2018_MiniAODv2-v1   597111130349395    597111130349395   \n",
       "12        RunIISummer20UL16MiniAOD   509919334113197    509919334113197   \n",
       "13     RunIISummer20UL16MiniAODAPV   444805461807943    444805461807943   \n",
       "14          Run2022F-PromptReco-v1   330138059157485    330138059157485   \n",
       "15  HIRun2018A-PbPb18_MiniAODv1-v1   223296483229525    223296483229525   \n",
       "16             Run3Summer21MiniAOD   209381472128320    209381472128320   \n",
       "17             Run3Winter22MiniAOD   146957265374897    146957265374897   \n",
       "18          Run2022C-PromptReco-v1   141415079691940    141415079691940   \n",
       "19          Run2018D-PromptReco-v2   133736254090284    133736254090284   \n",
       "20    Run2018A-UL2018_MiniAODv2-v1   127149466336034    127149466336034   \n",
       "21          Run2022E-PromptReco-v1   117031566283437    117031566283437   \n",
       "22           Run2018B-05May2019-v2   109478139836015    109478139836015   \n",
       "23    Run2018B-UL2018_MiniAODv2-v1   107025240597159    107025240597159   \n",
       "24    Run2018D-15Feb2022_UL2018-v1   103219436930491    103219436930491   \n",
       "25    Run2018C-UL2018_MiniAODv2-v1   100140324701733    100140324701733   \n",
       "26           Run2018C-05May2019-v1   100096342797526    100096342797526   \n",
       "27           Run2018A-05May2019-v1    99627999921488     99627999921488   \n",
       "28           Run3Winter21DRMiniAOD    73145663824010     73145663824010   \n",
       "29          HINPbPbSpring21MiniAOD    71576492737382     71576492737382   \n",
       "\n",
       "    dataset_on_tape_size  dataset_not_on_tape_size  total_dataset_count  \\\n",
       "0       1912611004439451            24949887544064                17892   \n",
       "1       1700713367632361            65247316804404                15043   \n",
       "2       1736675543185649            18863008298221                17171   \n",
       "3       1510446869781863            32288174385087                16635   \n",
       "4       1097421874214595             4359319805084                 3367   \n",
       "5       1009711519315023             1835051517590                25314   \n",
       "6        880306505603625             3598587448495                 3315   \n",
       "7        789070467751277            19175272359884                16603   \n",
       "8        712835060564296            22933107512658                15174   \n",
       "9        662536330750577              316237580623                18255   \n",
       "10       642458545376894                         0                    5   \n",
       "11       587840936279755             9270194069640                   19   \n",
       "12       508758899751258             1160434361939                 3298   \n",
       "13       444245149367421              560312440522                 3041   \n",
       "14       330138059157485                         0                   68   \n",
       "15       223296483229525                         0                   28   \n",
       "16       206650772690049             2730699438271                  225   \n",
       "17       138222700584553             8734564790344                  231   \n",
       "18       110686339486307            30728740205633                   72   \n",
       "19       133733606044635                2648045649                   62   \n",
       "20       127149466336034                         0                   20   \n",
       "21       117031566283437                         0                   98   \n",
       "22       109478139836015                         0                    6   \n",
       "23       107009210714592               16029882567                   20   \n",
       "24        59444997732964            43774439197527                   12   \n",
       "25       100140324701733                         0                   18   \n",
       "26       100096342797526                         0                    5   \n",
       "27        99627999921488                         0                    6   \n",
       "28        64448763354242             8696900469768                  298   \n",
       "29        71576492737382                         0                  158   \n",
       "\n",
       "    datasets_on_tape  datasets_not_on_tape  \\\n",
       "0              17427                   465   \n",
       "1              14836                   207   \n",
       "2              17021                   150   \n",
       "3              16191                   444   \n",
       "4               3345                    22   \n",
       "5              25185                   129   \n",
       "6               3294                    21   \n",
       "7              16281                   322   \n",
       "8              14989                   185   \n",
       "9              18115                   140   \n",
       "10                 5                     0   \n",
       "11                17                     2   \n",
       "12              3272                    26   \n",
       "13              2994                    47   \n",
       "14                68                     0   \n",
       "15                28                     0   \n",
       "16               218                     7   \n",
       "17               220                    11   \n",
       "18                37                    35   \n",
       "19                60                     2   \n",
       "20                20                     0   \n",
       "21                98                     0   \n",
       "22                 6                     0   \n",
       "23                19                     1   \n",
       "24                10                     2   \n",
       "25                18                     0   \n",
       "26                 5                     0   \n",
       "27                 6                     0   \n",
       "28               272                    26   \n",
       "29               158                     0   \n",
       "\n",
       "    datasets_fully_replicated_at_other_disks  \n",
       "0                                       8900  \n",
       "1                                        551  \n",
       "2                                        465  \n",
       "3                                       8362  \n",
       "4                                         13  \n",
       "5                                        526  \n",
       "6                                         10  \n",
       "7                                       8298  \n",
       "8                                       7917  \n",
       "9                                        724  \n",
       "10                                         0  \n",
       "11                                         1  \n",
       "12                                        19  \n",
       "13                                         5  \n",
       "14                                        68  \n",
       "15                                         0  \n",
       "16                                         8  \n",
       "17                                        18  \n",
       "18                                         5  \n",
       "19                                         4  \n",
       "20                                         1  \n",
       "21                                        98  \n",
       "22                                         0  \n",
       "23                                         1  \n",
       "24                                         0  \n",
       "25                                         1  \n",
       "26                                         0  \n",
       "27                                         0  \n",
       "28                                         2  \n",
       "29                                         2  "
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pd_meta"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "b530b6c9",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-29T11:25:21.330530Z",
     "start_time": "2022-11-29T11:25:21.092578Z"
    }
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "7c910e7b",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-29T07:53:36.734514Z",
     "start_time": "2022-11-29T07:53:36.731764Z"
    }
   },
   "outputs": [],
   "source": [
    "\n",
    "# df_replicas = spark.read.format('avro').load(HDFS_RUCIO_REPLICAS)\\\n",
    "#                     .withColumn('rse_id', F.lower(F.hex(F.col('RSE_ID'))))\\\n",
    "#                     .withColumnRenamed('NAME', 'file_name')\\\n",
    "#                     .alias(\"replicas\")\\\n",
    "#                     .join(\n",
    "#                         df_rses.alias(\"rse_name\"),\n",
    "#                         F.col(\"rse_name.rse_id\")==F.col(\"replicas.rse_id\")\n",
    "#                     )\\\n",
    "#                     .select(['replicas.rse_id',  'rse_name', 'file_name',])\n",
    "\n",
    "#Check the latest access for replica of miniaod(sim) in concern\n",
    "#We are ignoring last access - so skip this\n",
    "\n",
    "# df_locked_miniaods_us_with_last_access = df_locks_miniaod_us.alias(\"mini_lock\")\\\n",
    "#                                                             .join(df_replicas.alias(\"replicas\"),\n",
    "#                                                                   [F.col(\"replicas.file_name\")==F.col(\"mini_lock.file_name\"), F.col(\"replicas.rse_id\")==F.col(\"mini_lock.rse_id\")]\n",
    "#                                                                  )\\\n",
    "#                                                             .select([\"mini_lock.rse_name\", \"mini_lock.rse_id\", \"mini_lock.file_name\", \"mini_lock.file_size\", \"mini_lock.rule\", \"replicas.accessed_at\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "1bce9e22",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-29T11:22:55.225019Z",
     "start_time": "2022-11-29T11:22:55.216342Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "+----+--------------------------------+------------------+---------------------+------------------------+----------------------------+-----------------------+--------------------+------------------------+--------------------------------------------+\n",
      "|    | campaign                       |    campaign_size |   sum_dataset_sizes |   dataset_on_tape_size |   dataset_not_on_tape_size |   total_dataset_count |   datasets_on_tape |   datasets_not_on_tape |   datasets_fully_replicated_at_other_disks |\n",
      "+====+================================+==================+=====================+========================+============================+=======================+====================+========================+============================================+\n",
      "|  0 | RunIISummer20UL18MiniAODv2     | 1937379375612216 |    1937560891983515 |       1912611004439451 |             24949887544064 |                 17892 |              17427 |                    465 |                                       8900 |\n",
      "+----+--------------------------------+------------------+---------------------+------------------------+----------------------------+-----------------------+--------------------+------------------------+--------------------------------------------+\n",
      "|  1 | RunIIAutumn18MiniAOD           | 1765960684436765 |    1765960684436765 |       1700713367632361 |             65247316804404 |                 15043 |              14836 |                    207 |                                        551 |\n",
      "+----+--------------------------------+------------------+---------------------+------------------------+----------------------------+-----------------------+--------------------+------------------------+--------------------------------------------+\n",
      "|  2 | RunIIFall17MiniAODv2           | 1755538551483870 |    1755538551483870 |       1736675543185649 |             18863008298221 |                 17171 |              17021 |                    150 |                                        465 |\n",
      "+----+--------------------------------+------------------+---------------------+------------------------+----------------------------+-----------------------+--------------------+------------------------+--------------------------------------------+\n",
      "|  3 | RunIISummer20UL17MiniAODv2     | 1542735044166950 |    1542735044166950 |       1510446869781863 |             32288174385087 |                 16635 |              16191 |                    444 |                                       8362 |\n",
      "+----+--------------------------------+------------------+---------------------+------------------------+----------------------------+-----------------------+--------------------+------------------------+--------------------------------------------+\n",
      "|  4 | RunIISummer20UL18MiniAOD       | 1101781194019679 |    1101781194019679 |       1097421874214595 |              4359319805084 |                  3367 |               3345 |                     22 |                                         13 |\n",
      "+----+--------------------------------+------------------+---------------------+------------------------+----------------------------+-----------------------+--------------------+------------------------+--------------------------------------------+\n",
      "|  5 | RunIISummer16MiniAODv3         | 1011546570832613 |    1011546570832613 |       1009711519315023 |              1835051517590 |                 25314 |              25185 |                    129 |                                        526 |\n",
      "+----+--------------------------------+------------------+---------------------+------------------------+----------------------------+-----------------------+--------------------+------------------------+--------------------------------------------+\n",
      "|  6 | RunIISummer20UL17MiniAOD       |  883905093052120 |     883905093052120 |        880306505603625 |              3598587448495 |                  3315 |               3294 |                     21 |                                         10 |\n",
      "+----+--------------------------------+------------------+---------------------+------------------------+----------------------------+-----------------------+--------------------+------------------------+--------------------------------------------+\n",
      "|  7 | RunIISummer20UL16MiniAODv2     |  808245740111161 |     808245740111161 |        789070467751277 |             19175272359884 |                 16603 |              16281 |                    322 |                                       8298 |\n",
      "+----+--------------------------------+------------------+---------------------+------------------------+----------------------------+-----------------------+--------------------+------------------------+--------------------------------------------+\n",
      "|  8 | RunIISummer20UL16MiniAODAPVv2  |  735768168076954 |     735768168076954 |        712835060564296 |             22933107512658 |                 15174 |              14989 |                    185 |                                       7917 |\n",
      "+----+--------------------------------+------------------+---------------------+------------------------+----------------------------+-----------------------+--------------------+------------------------+--------------------------------------------+\n",
      "|  9 | RunIISummer16MiniAODv2         |  662852568331200 |     662852568331200 |        662536330750577 |               316237580623 |                 18255 |              18115 |                    140 |                                        724 |\n",
      "+----+--------------------------------+------------------+---------------------+------------------------+----------------------------+-----------------------+--------------------+------------------------+--------------------------------------------+\n",
      "| 10 | Run2018D-05May2019promptD-v1   |  642458545376894 |     642458545376894 |        642458545376894 |                          0 |                     5 |                  5 |                      0 |                                          0 |\n",
      "+----+--------------------------------+------------------+---------------------+------------------------+----------------------------+-----------------------+--------------------+------------------------+--------------------------------------------+\n",
      "| 11 | Run2018D-UL2018_MiniAODv2-v1   |  597111130349395 |     597111130349395 |        587840936279755 |              9270194069640 |                    19 |                 17 |                      2 |                                          1 |\n",
      "+----+--------------------------------+------------------+---------------------+------------------------+----------------------------+-----------------------+--------------------+------------------------+--------------------------------------------+\n",
      "| 12 | RunIISummer20UL16MiniAOD       |  509919334113197 |     509919334113197 |        508758899751258 |              1160434361939 |                  3298 |               3272 |                     26 |                                         19 |\n",
      "+----+--------------------------------+------------------+---------------------+------------------------+----------------------------+-----------------------+--------------------+------------------------+--------------------------------------------+\n",
      "| 13 | RunIISummer20UL16MiniAODAPV    |  444805461807943 |     444805461807943 |        444245149367421 |               560312440522 |                  3041 |               2994 |                     47 |                                          5 |\n",
      "+----+--------------------------------+------------------+---------------------+------------------------+----------------------------+-----------------------+--------------------+------------------------+--------------------------------------------+\n",
      "| 14 | Run2022F-PromptReco-v1         |  330138059157485 |     330138059157485 |        330138059157485 |                          0 |                    68 |                 68 |                      0 |                                         68 |\n",
      "+----+--------------------------------+------------------+---------------------+------------------------+----------------------------+-----------------------+--------------------+------------------------+--------------------------------------------+\n",
      "| 15 | HIRun2018A-PbPb18_MiniAODv1-v1 |  223296483229525 |     223296483229525 |        223296483229525 |                          0 |                    28 |                 28 |                      0 |                                          0 |\n",
      "+----+--------------------------------+------------------+---------------------+------------------------+----------------------------+-----------------------+--------------------+------------------------+--------------------------------------------+\n",
      "| 16 | Run3Summer21MiniAOD            |  209381472128320 |     209381472128320 |        206650772690049 |              2730699438271 |                   225 |                218 |                      7 |                                          8 |\n",
      "+----+--------------------------------+------------------+---------------------+------------------------+----------------------------+-----------------------+--------------------+------------------------+--------------------------------------------+\n",
      "| 17 | Run3Winter22MiniAOD            |  146957265374897 |     146957265374897 |        138222700584553 |              8734564790344 |                   231 |                220 |                     11 |                                         18 |\n",
      "+----+--------------------------------+------------------+---------------------+------------------------+----------------------------+-----------------------+--------------------+------------------------+--------------------------------------------+\n",
      "| 18 | Run2022C-PromptReco-v1         |  141415079691940 |     141415079691940 |        110686339486307 |             30728740205633 |                    72 |                 37 |                     35 |                                          5 |\n",
      "+----+--------------------------------+------------------+---------------------+------------------------+----------------------------+-----------------------+--------------------+------------------------+--------------------------------------------+\n",
      "| 19 | Run2018D-PromptReco-v2         |  133736254090284 |     133736254090284 |        133733606044635 |                 2648045649 |                    62 |                 60 |                      2 |                                          4 |\n",
      "+----+--------------------------------+------------------+---------------------+------------------------+----------------------------+-----------------------+--------------------+------------------------+--------------------------------------------+\n",
      "| 20 | Run2018A-UL2018_MiniAODv2-v1   |  127149466336034 |     127149466336034 |        127149466336034 |                          0 |                    20 |                 20 |                      0 |                                          1 |\n",
      "+----+--------------------------------+------------------+---------------------+------------------------+----------------------------+-----------------------+--------------------+------------------------+--------------------------------------------+\n",
      "| 21 | Run2022E-PromptReco-v1         |  117031566283437 |     117031566283437 |        117031566283437 |                          0 |                    98 |                 98 |                      0 |                                         98 |\n",
      "+----+--------------------------------+------------------+---------------------+------------------------+----------------------------+-----------------------+--------------------+------------------------+--------------------------------------------+\n",
      "| 22 | Run2018B-05May2019-v2          |  109478139836015 |     109478139836015 |        109478139836015 |                          0 |                     6 |                  6 |                      0 |                                          0 |\n",
      "+----+--------------------------------+------------------+---------------------+------------------------+----------------------------+-----------------------+--------------------+------------------------+--------------------------------------------+\n",
      "| 23 | Run2018B-UL2018_MiniAODv2-v1   |  107025240597159 |     107025240597159 |        107009210714592 |                16029882567 |                    20 |                 19 |                      1 |                                          1 |\n",
      "+----+--------------------------------+------------------+---------------------+------------------------+----------------------------+-----------------------+--------------------+------------------------+--------------------------------------------+\n",
      "| 24 | Run2018D-15Feb2022_UL2018-v1   |  103219436930491 |     103219436930491 |         59444997732964 |             43774439197527 |                    12 |                 10 |                      2 |                                          0 |\n",
      "+----+--------------------------------+------------------+---------------------+------------------------+----------------------------+-----------------------+--------------------+------------------------+--------------------------------------------+\n",
      "| 25 | Run2018C-UL2018_MiniAODv2-v1   |  100140324701733 |     100140324701733 |        100140324701733 |                          0 |                    18 |                 18 |                      0 |                                          1 |\n",
      "+----+--------------------------------+------------------+---------------------+------------------------+----------------------------+-----------------------+--------------------+------------------------+--------------------------------------------+\n",
      "| 26 | Run2018C-05May2019-v1          |  100096342797526 |     100096342797526 |        100096342797526 |                          0 |                     5 |                  5 |                      0 |                                          0 |\n",
      "+----+--------------------------------+------------------+---------------------+------------------------+----------------------------+-----------------------+--------------------+------------------------+--------------------------------------------+\n",
      "| 27 | Run2018A-05May2019-v1          |   99627999921488 |      99627999921488 |         99627999921488 |                          0 |                     6 |                  6 |                      0 |                                          0 |\n",
      "+----+--------------------------------+------------------+---------------------+------------------------+----------------------------+-----------------------+--------------------+------------------------+--------------------------------------------+\n",
      "| 28 | Run3Winter21DRMiniAOD          |   73145663824010 |      73145663824010 |         64448763354242 |              8696900469768 |                   298 |                272 |                     26 |                                          2 |\n",
      "+----+--------------------------------+------------------+---------------------+------------------------+----------------------------+-----------------------+--------------------+------------------------+--------------------------------------------+\n",
      "| 29 | HINPbPbSpring21MiniAOD         |   71576492737382 |      71576492737382 |         71576492737382 |                          0 |                   158 |                158 |                      0 |                                          2 |\n",
      "+----+--------------------------------+------------------+---------------------+------------------------+----------------------------+-----------------------+--------------------+------------------------+--------------------------------------------+\n"
     ]
    }
   ],
   "source": [
    "print(pd_meta.to_markdown(tablefmt=\"grid\"))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "5bbfc3d2",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.12"
  },
  "sparkconnect": {
   "bundled_options": [],
   "list_of_options": [
    {
     "name": "spark.jars.packages",
     "value": "org.apache.spark:spark-avro_2.12:3.2.1"
    },
    {
     "name": "spark.executor.memory",
     "value": "16g"
    }
   ]
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
